@use "common";

$animation-time: 0.3s;

.navbar {
  @include common.flex(row, space-between, center);
  
  padding: 30px;
  max-width: 1000px;
  width: 100%;

  #left {
    @include common.flex(row, space-between, center);
    
    margin: 0px;
    font-size: 2rem;
    line-height: 1;

    #subtitle {
      font-family: $body-font;
      font-weight: 300;
      font-size: 2rem;
      margin: 0px;
    }
  }

  #right {
    @include common.flex(row, space-between, center);
  }

  #hamburger {
    display: none;
    max-height: 1.5rem;
    max-width: 1.5rem;
    fill: white;
  }
}


/* The dropdown container */
.dropdown {
  @include common.flex(row, center);
  position: relative;

  .dropbtn {
    max-width: 200px;
    min-width: 180px;
    padding: 5px 10px;
    margin: 0; /* Important for vertical align on mobile phones */

    font-family: inherit; /* Important for vertical align on mobile phones */
    font-size: 1.2rem;

    border: none;
    outline: none;
    color: white;
    border-radius: 5px 5px 0px 0px;

    background-color: inherit;
  }


  /* Add a red background color to navbar links on hover */
  &:hover .dropbtn {
    background-color: common.$accent-color;
    font-weight: 600;
    
    transition: background-color 0.4s;
  }

  /* Fade in the dropdown menu on hover */
  &:hover .dropdown-content {
    @include common.flex(column, center, center);
    display: block;
    opacity: 100%;

    visibility: visible;
    transition: opacity 0.4s ease-in;
  }
}

/* Dropdown content (hidden by default) */
.dropdown-content {
  visibility: hidden;
  opacity: 0%;

  position: absolute; /* Position absolutely relative to the parent */
  top: 100%;

  background-color: rgba(common.$bg-color, common.$transparency);
  border-radius: 0px 0px 3.5px 3.5px;
  
  width: 100%;
  z-index: 1;

  /* Links inside the dropdown */
  a {
    display: block;
    width: 100%;
    color: black;
    text-align: center;

    text-decoration: none;
    font-size: 1rem;
    font-family: common.$body-font;
    font-weight: 500;
    color: white;
    margin: 0px;

    padding: 7.5px 5px;
    border-radius: 2px;

    transition: all 0.4s;
    box-shadow: none;

    /* adds the hover red underline animation */
    &:hover {
      background-color: $darker-bg-color;
      box-shadow: 0px 5px 0px 0px common.$accent-color;
    }
  }

}

 /* When the screen is less than content width, hide all links, except for the first one ("Home"). Show the link that contains should open and close the topnav (.icon) */
@media screen and (max-width: common.$content-width) {
  // This is the styling to start displaying the dropdown menu on hamburger click
  .navbar.responsive {
    background-color: common.$bg-color;
    border-radius: 0px 0px 5px 5px;

    .dropdown {
      // Fade in the dropdown items on hamburger click
      opacity: 100%; 
      visibility: visible;

      @include common.flex(column, center, center);
      width: 100%;
    }
  }

  // Javascript adds this class to the dropdown when the section is clicked 
  .dropdown.section-clicked{
    .dropdown-content {
      display: block;
      visibility: visible;
      opacity: 100%;
      position: inherit;
    }

    .dropbtn {
      font-weight: 600;
      background-color: common.$accent-color;
    }
  }
  
  // this is how to style the navbar for this screen size 
  .navbar {
    @include common.flex(column, center, center);
    transition: background-color $animation-time ease-in;

    .dropdown {
      all: unset; // clear the hover effects to prevent conflicting behavior
      visibility: hidden;
      
      // Initially when hamburger is not clicked, the dropdown items are hidden
      opacity: 0%;
      transition: opacity $animation-time ease-in;

      .dropbtn {
        max-width: none;
        border-radius: 5px;
        width: 100%;
      }
    }

    #left {
      @include common.flex(row, space-between, center);
      width: 100%;
      margin-bottom: 10px;

      #hamburger {
        display: inline-block;

        max-width: 2rem;
        max-height: 2rem;
      }
    }

    #right {
      @include common.flex(column, center, center);
      width: 100%;
    }
  }

}



